{"version":3,"sources":["components/Sidebar/Sidebar.jsx","components/General/LogInOutButton.jsx","components/General/ResizeSidebarButton.jsx","components/General/CustomSelect.jsx","components/ActiveZone/TableHead.jsx","components/ActiveZone/ListItem.jsx","components/ActiveZone/ActiveZone.jsx","components/Sidebar/SidebarButton.jsx","components/Sidebar/NavigationBar.jsx","data/Data.js","components/Sidebar/UserInfoArea.jsx","components/General/Header.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["StyledSidebar","styled","Sidebar","showed","children","className","StyledButton","button","LogInOutButton","text","StyledResizeButton","ResizeButton","controlSidebar","state","undefined","buttonSate","test","onClick","defaultProps","PropTypes","elemet","StyledCustomSelect","div","CustomSelect","date","dateList","changeActiveZoneDate","useState","show","setShow","showDateList","el","type","map","index","toString","StyledTableHead","cols","TableHead","tableData","Object","keys","length","StyledListItem","ListItem","itemData","data","values","StyledActiveArea","main","ActiveZone","eventZone","activeZoneDate","setActiveZoneDate","value","StyledSidebarButton","link","replace","SidebarButton","isActive","StyledNavigationBar","nav","NavigationBar","links","activeButton","setActiveButton","activeTab","idx","Data","StyledUserInfo","figure","UserInfo","userData","src","alt","StyledHeader","header","Header","as","navData","isMobile","window","innerWidth","App","sidebarState","setSidebarState","setDate","hideSidebar","changeDate","dateToActiveZone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5740c96.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledSidebar = styled('aside')`\n  position: absolute;\n  height: 100vh;\n  left: 0;\n  max-width: 245px;\n  padding: 45px 25px;\n  background-color: #e8eaf0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  z-index: 10;\n  transition: transform 0.3s ease-in-out;\n  &.hidden {\n    transform: translateX(-100%);\n  }\n  @media screen and (max-width: 480px) {\n    min-width: 320px;\n    top: 70px;\n    background-color: #fff;\n    justify-content: flex-start;\n  }\n`;\n\nexport const Sidebar = ({ showed, children }) => {\n  const className = showed ? '' : 'hidden';\n  return <StyledSidebar className={className}>{children}</StyledSidebar>;\n};\n\nSidebar.propTypes = {\n  showed: PropTypes.bool.isRequired,\n  children: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  font-family: 'Inter';\n  outline: none;\n  border: none;\n  border-radius: 6px;\n  padding: 9px 18px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n  color: #058373;\n  cursor: pointer;\n  background-color: rgba(5, 131, 115, 0.1);\n  transition: background-color, 0.2s ease-in-out;\n  &::focus,\n  &:active {\n    outline: none;\n  }\n  &:hover {\n    background-color: rgba(5, 131, 115, 0.2);\n  }\n`;\n\nexport const LogInOutButton = ({ text }) => {\n  return <StyledButton>{text}</StyledButton>;\n};\n\nLogInOutButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport const StyledResizeButton = styled.button`\n  outline: none;\n  border: none;\n  width: 24px;\n  height: 24px;\n  background: transparent url('./img/Arrow.svg') center center no-repeat;\n  border-radius: 6px;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    opacity: 0.6;\n  }\n  &.hided {\n    transform: rotate(180deg);\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const ResizeButton = ({\n  controlSidebar,\n  state,\n  className = undefined,\n  children,\n}) => {\n  let buttonSate = state;\n  const test = state ? `${className} showed` : `${className} hided`;\n\n  const hideSidebar = () => {\n    buttonSate = !buttonSate;\n    controlSidebar(buttonSate);\n  };\n  return (\n    <StyledResizeButton className={test} onClick={hideSidebar}>\n      {children}\n    </StyledResizeButton>\n  );\n};\n\nResizeButton.defaultProps = {\n  children: PropTypes.elemet,\n  className: '',\n};\n\nResizeButton.propTypes = {\n  controlSidebar: PropTypes.func.isRequired,\n  state: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.element,\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledCustomSelect = styled.div`\n  & .datelist {\n    position: relative;\n    border: 1px solid #dedfe2;\n    border-radius: 6px;\n    width: 175px;\n    cursor: pointer;\n    &.active {\n      &:after {\n        transform: rotate(180deg);\n      }\n    }\n    &:after {\n      position: absolute;\n      right: 20px;\n      top: 50%;\n      transform: translateY(-50%);\n      content: url('./img/Select-icon.svg');\n      margin-left: 25px;\n      pointer-events: none;\n    }\n    &-btn {\n      border: none;\n      outline: none;\n      background-color: transparent;\n      box-sizing: border-box;\n      padding: 14px 17px;\n      width: 100%;\n      height: 100%;\n      font-size: 14px;\n      line-height: 17px;\n      cursor: pointer;\n      text-align: left;\n    }\n    & .change-date-zone {\n      padding: 17px;\n      max-height: 290px;\n      overflow-y: auto;\n      top: calc(100% + 10px);\n      width: 100%;\n      left: 0;\n      cursor: default;\n      position: absolute;\n      border: 1px solid rgba(12, 20, 39, 0.05);\n      box-sizing: border-box;\n      box-shadow: 0px 2px 2px rgba(12, 20, 39, 0.1);\n      border-radius: 8px;\n      background-color: #fff;\n      z-index: 10;\n      &_btn {\n        font-size: 14px;\n        line-height: 17px;\n        color: #0c1427;\n        border: none;\n        outline: none;\n        background-color: transparent;\n        cursor: pointer;\n        display: block;\n        &:not(:last-of-type) {\n          margin-bottom: 25px;\n        }\n      }\n      &.hided {\n        display: none;\n      }\n    }\n  }\n`;\nexport const CustomSelect = ({ date, dateList, changeActiveZoneDate }) => {\n  const [show, setShow] = useState(false);\n  const showDateList = (el = undefined) => {\n    if (typeof el !== 'string') {\n      setShow(!show);\n      return;\n    }\n    changeActiveZoneDate(el);\n    setShow(!show);\n  };\n  const className = show ? 'change-date-zone' : 'change-date-zone hided';\n  return (\n    <StyledCustomSelect>\n      <div className=\"datelist\">\n        <button type=\"button\" className=\"datelist-btn\" onClick={showDateList}>\n          {date}\n        </button>\n        <div className={className}>\n          {dateList.map((el, index) => (\n            <button\n              className=\"change-date-zone_btn\"\n              type=\"button\"\n              key={index.toString()}\n              onClick={() => showDateList(el)}\n            >\n              {el}\n            </button>\n          ))}\n        </div>\n      </div>\n    </StyledCustomSelect>\n  );\n};\n\nCustomSelect.propTypes = {\n  dateList: PropTypes.array.isRequired,\n  date: PropTypes.string.isRequired,\n  changeActiveZoneDate: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledTableHead = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${({ cols }) => cols}, 1fr);\n  padding: 20px;\n  & .table-head {\n    &_item {\n      color: #8697a8;\n      text-transform: uppercase;\n      font-size: 10px;\n      line-height: 12px;\n      font-weight: 500;\n    }\n  }\n  @media screen and (max-width: 480px) {\n    display: none;\n  }\n`;\n\nexport const TableHead = ({ tableData }) => {\n  const cols = Object.keys(tableData[0]);\n  return (\n    <StyledTableHead cols={cols.length}>\n      {cols.map((el, index) => (\n        <span className=\"table-head_item\" key={index.toString()}>\n          {el}\n        </span>\n      ))}\n    </StyledTableHead>\n  );\n};\n\nTableHead.propTypes = {\n  tableData: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledListItem = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${({ cols }) => cols}, 1fr);\n  padding: 20px;\n  background: #ffffff;\n  border: 1px solid rgba(12, 20, 39, 0.05);\n  box-sizing: border-box;\n  box-shadow: 0px 2px 2px rgba(12, 20, 39, 0.1);\n  border-radius: 20px;\n  &:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n  & .list-item_span {\n    font-size: 14px;\n    line-height: 17px;\n    color: #0c1427;\n  }\n  .list-item_key {\n    display: none;\n  }\n  @media screen and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    .list-item {\n      &_span {\n        display: flex;\n        justify-content: space-between;\n        font-size: 14px;\n        &:not(:last-of-type) {\n          margin-bottom: 15px;\n        }\n        :nth-child(n + 3) {\n          font-weight: 600;\n        }\n      }\n      &_key {\n        display: block;\n        font-weight: 400;\n        text-transform: uppercase;\n        font-size: 10px;\n        color: #8697a8;\n      }\n    }\n  }\n`;\n\nexport const ListItem = ({ itemData }) => {\n  const data = Object.values(itemData);\n  return (\n    <StyledListItem cols={data.length}>\n      {data.map((el, index) => (\n        <span key={index.toString()} className=\"list-item_span\">\n          <span className=\"list-item_key\">{Object.keys(itemData)[index]}</span>\n          {el}\n        </span>\n      ))}\n    </StyledListItem>\n  );\n};\n\nListItem.propTypes = {\n  itemData: PropTypes.object.isRequired,\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { LogInOutButton } from '../General/LogInOutButton';\nimport { ResizeButton } from '../General/ResizeSidebarButton';\nimport { CustomSelect } from '../General/CustomSelect';\nimport { TableHead } from './TableHead';\nimport { ListItem } from './ListItem';\n\nconst isLogined = true;\nconst text = isLogined ? 'Sign Out' : 'Log In';\n\nconst StyledActiveArea = styled.main`\n  padding: 45px 40px 0 60px;\n  width: calc(100% - 245px);\n  height: 100vh;\n  & header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 50px;\n    @media screen and (max-width: 480px) {\n      display: none;\n    }\n  }\n  & .date-info {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 25px;\n\n    &_title {\n      font-size: 40px;\n      line-height: 48px;\n      font-weight: 700;\n      color: #0c1427;\n      br {\n        display: none;\n      }\n    }\n    &_date-value {\n      color: #058373;\n    }\n    @media screen and (max-width: 480px) {\n      flex-direction: column;\n      &_title {\n        font-size: 24px;\n        line-height: 29px;\n        margin-bottom: 15px;\n        br {\n          display: block;\n        }\n      }\n    }\n  }\n  & .event-zone {\n    overflow-y: auto;\n    height: calc(100% - 220px);\n    padding: 5px 0;\n    @media screen and (max-width: 480px) {\n      height: calc(100% - 170px);\n      padding: 5px;\n    }\n  }\n  @media screen and (max-width: 480px) {\n    width: 100%;\n    margin-top: 70px;\n    height: calc(100vh - 70px);\n    padding: 16px 15px;\n  }\n`;\n\nexport const ActiveZone = ({\n  controlSidebar,\n  state,\n  date,\n  dateList,\n  eventZone,\n}) => {\n  const [activeZoneDate, setActiveZoneDate] = useState(date);\n  const changeActiveZoneDate = (value) => {\n    setActiveZoneDate(value);\n  };\n  return (\n    <StyledActiveArea>\n      <header>\n        <ResizeButton controlSidebar={controlSidebar} state={state} />\n        <LogInOutButton text={text} />\n      </header>\n      <div className=\"date-info\">\n        <h2 className=\"date-info_title\">\n          All Shifts\n          <br />\n          for\n          <span className=\"date-info_date-value\"> {activeZoneDate}</span>\n        </h2>\n        <CustomSelect\n          dateList={dateList}\n          date={activeZoneDate}\n          changeActiveZoneDate={changeActiveZoneDate}\n        />\n      </div>\n      <TableHead tableData={eventZone} />\n      <div className=\"event-zone\">\n        {eventZone.map((el, index) => (\n          <ListItem key={index.toString()} itemData={el} />\n        ))}\n      </div>\n    </StyledActiveArea>\n  );\n};\n\nActiveZone.propTypes = {\n  controlSidebar: PropTypes.func.isRequired,\n  state: PropTypes.bool.isRequired,\n  date: PropTypes.string.isRequired,\n  dateList: PropTypes.array.isRequired,\n  eventZone: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledSidebarButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 15px;\n  padding-left: 50px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-family: 'Inter', sans-serif;\n  font-size: 14px;\n  border: 1px solid transparent;\n  background-color: transparent;\n  transition: all 0.2s ease-in-out;\n  background: url(${({ link }) => `./img/${link.replace(' ', '%20')}.svg`}) 15px\n    center no-repeat;\n  &:focus {\n    outline: none;\n  }\n  &:active {\n    background-color: #fff;\n  }\n  &:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n  &.active {\n    background-color: #fff;\n  }\n`;\n\nexport const SidebarButton = ({ link, isActive, onClick }) => {\n  const className = isActive === link ? 'active' : '';\n  const hadleOnClick = () => onClick(link);\n  return (\n    <StyledSidebarButton\n      className={className}\n      onClick={hadleOnClick}\n      link={link}\n    >\n      {link}\n    </StyledSidebarButton>\n  );\n};\n\nSidebarButton.defaultProps = {\n  isActive: '',\n};\n\nSidebarButton.propTypes = {\n  link: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  isActive: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { SidebarButton } from './SidebarButton';\n\nconst StyledNavigationBar = styled.nav`\n  display: flex;\n  flex-direction: column;\n  @media screen and (max-width: 480px) {\n    order: 1;\n  }\n`;\n\nexport const NavigationBar = ({ links }) => {\n  const [activeButton, setActiveButton] = useState(links[0]);\n  const onClick = (activeTab) => {\n    setActiveButton(activeTab);\n  };\n  return (\n    <StyledNavigationBar>\n      {links.map((link, idx) => (\n        <SidebarButton\n          isActive={activeButton}\n          onClick={onClick}\n          link={link}\n          key={idx.toString()}\n        />\n      ))}\n    </StyledNavigationBar>\n  );\n};\n\nNavigationBar.propTypes = {\n  links: PropTypes.array.isRequired,\n};\n","export const Data = {\n    navData: ['My Dashboard', 'People', 'Operations', 'Schedule Planning', 'Administration', 'Action Tracking'],\n    userData: ['Darlene Robertson'],\n    dateList: ['January 2021', 'February 2021', 'March 2021', 'April 2021', 'May 2021', 'June 2021', 'July 2021', 'August 2021', 'September 2021', 'October 2021', 'November 2021', 'December 2021'],\n    eventZone: [{\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        }, {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n        {\n            \"date\": 'January 06, 2020',\n            'Shift type': 'Afternoon',\n            'Period': '15:00 - 23:00',\n            'Hours': '8h',\n            'Salary (gross)': '$1,630',\n            'Bonus (gross)': '30'\n        },\n    ]\n}","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { LogInOutButton } from '../General/LogInOutButton';\n\nconst isLogined = true;\nconst text = isLogined ? 'Sign Out' : 'Log In';\n\nconst StyledUserInfo = styled.figure`\n  padding-left: 10px;\n  display: flex;\n  align-items: center;\n  & .user-avatar {\n    margin-right: 15px;\n  }\n  .button {\n    display: none;\n  }\n  @media screen and (max-width: 480px) {\n    order: 0;\n    margin-bottom: 35px;\n    .button {\n      display: block;\n      max-width: 100px;\n      white-space: nowrap;\n    }\n  }\n`;\n\nexport const UserInfo = ({ userData }) => {\n  return (\n    <StyledUserInfo>\n      <img className=\"user-avatar\" src=\"./img/Avatar.png\" alt=\"user avatar\" />\n      <figcaption className=\"user-name\">{userData}</figcaption>\n      <div className=\"button\">\n        <LogInOutButton text={text} />\n      </div>\n    </StyledUserInfo>\n  );\n};\n\nUserInfo.propTypes = {\n  userData: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { ResizeButton } from './ResizeSidebarButton';\n\nconst StyledResizeButton = styled(ResizeButton)`\n  z-index: 10;\n  background: unset;\n  .burger {\n    height: 2px;\n    width: 100%;\n    background-color: #fff;\n    border-radius: 1px;\n    display: inline-block;\n    position: relative;\n    vertical-align: middle;\n    visibility: hidden;\n    &:after,\n    &:before {\n      content: '';\n      position: absolute;\n      display: block;\n      height: 2px;\n      width: 100%;\n      background-color: #fff;\n      border-radius: 1px;\n      transition: all 0.2s ease-in-out;\n    }\n    &:before {\n      visibility: visible;\n      top: 0;\n      transform: rotate(45deg);\n    }\n    &:after {\n      visibility: visible;\n      top: 0;\n      transform: rotate(-45deg);\n    }\n  }\n  &.hided {\n    transform: unset;\n    .burger {\n      visibility: visible;\n      &:before {\n        transform: rotate(0);\n        top: -5px;\n      }\n      &:after {\n        transform: rotate(0);\n        top: 5px;\n      }\n    }\n  }\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst StyledHeader = styled.header`\n  display: none;\n  background-color: #000;\n  padding: 20px 15px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 70px;\n\n  @media screen and (max-width: 480px) {\n    display: block;\n  }\n`;\n\nexport const Header = ({ controlSidebar, state }) => {\n  return (\n    <StyledHeader>\n      <StyledResizeButton\n        as={ResizeButton}\n        controlSidebar={controlSidebar}\n        state={state}\n      >\n        <span className=\"burger\" />\n      </StyledResizeButton>\n    </StyledHeader>\n  );\n};\n\nHeader.propTypes = {\n  controlSidebar: PropTypes.func.isRequired,\n  state: PropTypes.bool.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Sidebar } from './components/Sidebar/Sidebar';\n\nimport { ActiveZone } from './components/ActiveZone/ActiveZone';\nimport { NavigationBar } from './components/Sidebar/NavigationBar';\nimport { Data } from './data/Data';\nimport { UserInfo } from './components/Sidebar/UserInfoArea';\nimport { Header } from './components/General/Header';\n\nconst { navData, userData, dateList, eventZone } = Data;\nconst isMobile = window.innerWidth > 480;\nexport const App = () => {\n  const [sidebarState, setSidebarState] = useState(isMobile);\n  const [date, setDate] = useState('January 2021');\n\n  const hideSidebar = (state) => {\n    setSidebarState(state);\n  };\n  const changeDate = (dateToActiveZone) => {\n    setDate(dateToActiveZone);\n  };\n  return (\n    <div className=\"root\">\n      <Header controlSidebar={hideSidebar} state={sidebarState} />\n      <Sidebar showed={sidebarState}>\n        <NavigationBar links={navData} />\n        <UserInfo userData={userData} />\n      </Sidebar>\n      <ActiveZone\n        controlSidebar={hideSidebar}\n        state={sidebarState}\n        date={date}\n        changeDate={changeDate}\n        dateList={dateList}\n        eventZone={eventZone}\n      />\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}